문제9.변수에 final은 어떤 역할을 하는가?
변수의 값을 변환할 수 없다
=====================================================================================================
문제10. byte에서 다른 데이터 타입으로 자동형변환을 실시하려고 한다. 형변환이 되지않는 기본 데이터 타입은 무엇인가?
char은 되지 않는다.
=====================================================================================================
문제12. boolean은 자동혹은 강제형변환에서 어떤 데이터 타입으로 형변환이 가능한가?
모든 데이터 타입에서 형변환 불가능
문자열(String) 등 다른 객체 타입으로는 형변환이 가능하다
=====================================================================================================
문제14. char을 숫자형태로 자동형변환을 하려고 한다. 자동형변환이 되지않는 데이터 타입은 무엇인가?
byte, short
=====================================================================================================
문제15. 숫자 65를 char으로 강제형변환하는 코드를 작성하시오.
char a = (char)65;
=====================================================================================================
문제16. 실수 3.14f를 정수 int로 강제 형변환하는 코드를 작성하시오
int a = (int)3.14f;
=====================================================================================================
문제17. 강제형변환을 실시하였을 경우 생길수있는 부작용은 무엇인가?
데이터가 손실되며 값이 잘리거나 변형될 수 있음
=====================================================================================================
문제22. 
int x = 5;
x = x + 1; 를 간단하게 표현한 연산자는?
증가 연산자 x++; 또는 ++x;를 사용합니다.
=====================================================================================================
문제35. 
String username = "admin";
String password = "1234";

if ( ) {
System.out.println("로그인 성공");
} else {
System.out.println("로그인 실패");
}
위의 코드에서 아이디 패스워드가 같을경우 로그인 성공을 위한 코드를 작성하시오.
username.equals("admin") && password.equals("1234")
=====================================================================================================
문제40.
int num = 1;
while (num <= 10) {
if (num % 3 == 0) {
System.out.println(num);
}
___;
}
다음은 3의 배수만 출력하는 코드이다. 빈칸에 들어갈 코드를 채우시오.

num++
=====================================================================================================
문제42. 다음은 1부터 5까지의 수 중에서 짝수를 건너뛰고 출력하는 코드입니다. 빈칸을 채우세요.
for (int i = 1; i <= 5; i++) {
if (i % 2 == 0) {
__________;
}
System.out.println(i);
}

continue
=====================================================================================================
answp43.continue의 특징에 대해서 서술하시오.
현재 반복을 건너뛰고 다음 반복으로 넘어간다
=====================================================================================================
문제46. 배열과 일반 변수의 차이점은 무엇인가요?
일반 변수는 하나의 값만 저장할 수 있지만, 배열은 동일한 타입의 여러 값을 하나의 이름으로 연속적으로 저장할 수 있습니다. 
배열은 반복문과 함께 사용하면 많은 데이터를 효율적으로 처리할 수 있습니다.
=====================================================================================================
문제48. 배열에서 정수(int) 5개를 담을수 있는 배열변수 선언을 하시오, 값은 없이 선언만 된상태입니다.
int[] a = new int[5];
=====================================================================================================
문제49.
아래는 사용자로부터 5개의 정수를 입력받아 배열에 저장하는 코드입니다.
for문을 채워 코드를 완성하세요.
public class ArrayInputExample {
public static void main(String[] args) {
Scanner sc = new Scanner(System.in);
int[] numbers = new int[5];

//for문 작성

System.out.println("입력한 숫자:");
for (int i = 0; i < numbers.length; i++) {
System.out.println(numbers[i]);
}
}
}

for (int i = 0; i < numbers.length; i++) { 
numbers[i] = sc.nextInt(); 
}
=====================================================================================================
문제50. 
아래는 배열에 저장된 정수들을 출력하는 코드입니다.
빈칸을 채워 코드를 완성하세요.
public class ArrayPrintExample {
public static void main(String[] args) {
int[] scores = {85, 90, 78, 92, 88};

for (int i = 0; i < _______; i++) {
System.out.println(__________);
}
}
}
for (int i = 0; i < scores.length; i++) { System.out.println(scores[i]); }
=====================================================================================================
문제51. 인스턴스란 무엇인지 서술하시오
“인스턴스”는 어떤 클래스에 의해 생성된 구체적인 객체를 말할 때 사용합니다.
=====================================================================================================
문제52. 클래스 이름이 test라는 클래스가 있습니다 이클래스를 객체생성하여 참조변수에 담는 코드를 작성하시오.
test t = new test();
=====================================================================================================
문제55. 
Dog객체를 2개 만들고 각각의 breed변수에 푸들, 말티즈로 설정한 후 출력하시오.
class Dog {
String breed;
}

public class Main {
public static void main(String[] args) {
// Dog 객체를 두 개 만들고 각각 breed를 "푸들", "말티즈"로 설정한 후 출력하시오.
// 객체 생성과 필드 설정, 출력까지 모두 작성
_______________________________
}
}

Dog d1 = new Dog(); 
Dog d2 = new Dog(); 
d1.breed = "푸들"; 
d2.breed = "말티즈"; 
System.out.println(d1.breed); 
System.out.println(d2.breed);
=====================================================================================================
문제56. 다음 코드 중 컴파일 오류가 발생하는 부분은 무엇인가? 그이유를 설멍하시오.
reset() 메서드는 static 메서드로 선언되어 있기 때문에 인스턴스 변수인 count에는 접근할 수 없음.
=====================================================================================================
문제57. static에 대해서 서술하시오
static은 미리 생성되며, 1개만 존재한다.
=====================================================================================================
문제58. 
다음 코드에서 잘못된 부분을 수정하시오.
public void sum(a, b) {
return a + b;
}
public int sum(int a, int b) {
 return a + b; 
}
=====================================================================================================
문제 60. 매개변수가 무엇인지 서술하시오.
메서드나 함수가 호출될 때 전달받는 값(인자, argument)을 저장하기 위한 변수
=====================================================================================================
문제61. 전역변수와 지역변수의 차이점을 서술하시오.
전역변수와 지역변수는 변수가 선언된 위치에 따라 접근 가능 범위(scope) 가 달라지는 개념입니다. 
자바에서는 기본적으로 메서드 안과 클래스 안에서의 선언 위치로 구분됩니다.
=====================================================================================================
문제63. 
아래 클래스 정의 중 오버로딩 규칙에 위배되는 부분이 있다. 해당 부분이 오버로딩 규칙에 어긋나는 이유를 서술하시오.
public class Logger {

public void log(String msg) {
System.out.println("LOG: " + msg);
}

public String log(String msg) {
return "[LOG] " + msg;
}
}

메서드 이름과 매개변수 목록이 동일하고 반환 타입만 다른 경우는 오버로딩이 성립하지 않음.
=====================================================================================================
문제64. 생성자의 역할을 설명하시오
생성자는 객체가 생성될 때 자동으로 호출되어 객체의 초기화를 담당하는 특수한 메서드이다.
=====================================================================================================

=====================================================================================================

=====================================================================================================

