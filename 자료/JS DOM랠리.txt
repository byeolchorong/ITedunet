데이터, 객체, 요소(태그)
> 생성, 검색, 수정, 삭제
Create, Read, Update, Delete
✨CRUD

Read(검색)
js : html, css,(html style) 조작할수있다

document.querySelector("css선택자문법");
// 해당하는 요소 1개만 되돌려줌 
document.querySelectorAll("css선택자문법");
// 여러개의 요소 
// 배열처럼 [index]로 접근이 가능하다 
//NodeList.length : 데이터 개수
li * 10이 담긴 : 객체의 묶음 : NodeList
// NodeList[0] : li의 0번째라는뜻!

** 이벤트에 따른 처리를 하고싶다 **
// 내가 찾은 요소에 대해 클릭했을때 myFunction이 실행된다 !! 
찾은 요소.addEventListener("click",myFunction); 

이벤트 타겟 : 찾은요소
이벤트 종류 : click
이벤트 처리할 함수 : myFunction

생성, 삭제, 수정
태그를 만들어서 body 추가 
// 특정요소에 span태그내 내용 그대로 적용
1) 특정요소.innerHTML = "<span>안뇽</span>"
2) let new = document.creatElement("span");
new.innerHTML = "안뇽";
// body의 젤뒤에다가 붙인다라는 내용 
document.body.appendChild(new);

** 텍스트만 추가하고 싶을때 **
1) 특정요소.innerHTML = "안뇽";
2) 특정요소.textContent = "안뇽";

특정요소.innerHTML = "<p>안녕</p>"
document.write(특정요소.innerHTML);

ul > li * 6 

일부를 가져오고 싶다 
ul요소.childeren[0];
ul요소.childNodes[0]; // 줄바꿈까지 

속성 > 추가, 수정
특정요소.속성 = "aa";
특정요소.setAttribute("id","abc");
특정요소.removeAttribute("id");

특정요소.className = "abc";
// 주의사항 기본적으로 가지고 있던 class값을 덮어쓴다. 
"a b c d e" 기본적으로 이렇게 가지고 있을대 
"abc" 를 하면 
"a b c d e"는 다 사라지고 "abc"로 변경된다. 

특정요소.classList.add("abc"); 		// 맨뒤에 추가가 된다 
특정요소.classList.remove("abc");		// ()괄호안에 기재되어있는 부분만 삭제가 된다.

특정요소.style.backgroundColor = "pink";

this : 이벤트가 발생한 객체가 this가 된다 ! 
