/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.41
 * Generated at: 2025-05-30 08:55:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import dto.Book;
import dao.BookRepository;

public final class book_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/menu.jsp", Long.valueOf(1748505581365L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("dto.Book");
    _jspx_imports_classes.add("dao.BookRepository");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"exceptionNoBookId.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
System.out.println("입장"); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/705381df09.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"./resources/css/bootstrap.min.css\"/>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>도서 상세 정보</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function addToCart() {\r\n");
      out.write("		if (confirm(\"도서를 장바구니에 추가하시겠습니까?\")) {\r\n");
      out.write("			document.addForm.submit();\r\n");
      out.write("		} else {\r\n");
      out.write("			document.addForm.reset();\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container py-4\">\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/705381df09.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("	<header class=\"pb-3 mb-4 border-bottom\">\r\n");
      out.write("		<a href=\"./welcome.jsp\" class=\"d-flex align-items-center text-dark text-decoration-none\">\r\n");
      out.write("			<i class=\"fa-solid fa-house\"></i>\r\n");
      out.write("			<span class=\"fs-4\">Home</span>\r\n");
      out.write("		</a>\r\n");
      out.write("	</header>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"p-5 mb-4 bg-body-tertiary rounded-3\">\r\n");
      out.write("		<div class=\"container-fluid py-5\">\r\n");
      out.write("			<h1 class=\"display-5 fw-bold\">도서정보</h1>\r\n");
      out.write("			<p class=\"col-md-8 fs-4\">BookInfo</p>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	");

		String id = request.getParameter("id");
		BookRepository dao = BookRepository.getInstance();
		Book book = dao.getBookById(id);
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"row align-items-md-stretch\">\r\n");
      out.write("		<div class=\"col-md-5\">\r\n");
      out.write("			<img src=\"./resources/images/");
      out.print( book.getFileName());
      out.write("\" style=\"width : 70%\" />\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"col-md-6\">\r\n");
      out.write("			<h3><b>");
      out.print(book.getName() );
      out.write("</b></h3>\r\n");
      out.write("			<p> ");
      out.print(book.getDescription() );
      out.write("\r\n");
      out.write("			<p> <b> 도서코드 : </b><span class=\"badge text-bg-danger\">\r\n");
      out.write("			");
      out.print(book.getBookId() );
      out.write("</span>\r\n");
      out.write("			<p> <b>저자</b> : ");
      out.print(book.getAuthor() );
      out.write(" \r\n");
      out.write("			<p> <b>출판사</b> : ");
      out.print(book.getPublisher() );
      out.write("\r\n");
      out.write("			<p> <b>출판일</b> : ");
      out.print(book.getReleaseDate() );
      out.write("\r\n");
      out.write("			<p> <b>분류</b> : ");
      out.print(book.getCategory() );
      out.write("\r\n");
      out.write("			<p> <b>재고수</b> : ");
      out.print(book.getUnitsInStock() );
      out.write("\r\n");
      out.write("			<h4>");
      out.print(book.getUnitPrice() );
      out.write("원</h4>\r\n");
      out.write("			<p> <form name=\"addForm\" action=\"./addCart.jsp?id=");
      out.print(book.getBookId());
      out.write("\" method=\"post\">\r\n");
      out.write("				<p> <a href=\"#\" class=\"btn btn-info\" onclick=\"addToCart()\">도서주문 &raquo;</a>\r\n");
      out.write("				<a href=\"cart.jsp\" class=\"btn btn-warning\">장바구니 &raquo;</a>\r\n");
      out.write("				<a href=\"books.jsp\" class=\"btn btn-secondary\">도서 목록 &raquo;</a>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
